TODO

IN PROGRESS: configure journalctl
- DONE: change the waggle-init from rsyslog to journalctl (remove the rsyslog config) (this may arleady just work)
- DONE: make sure it is on the overlay rw partition (just like the NX)
- before: Feb 17 15:07:24 sb-prereg systemd-journald[423]: System journal (/var/log/journal/d0a07a21b7c049d9916a1869da31d7c7) is 8.0M, max 474.2M, 466.2M free.
- after: Feb 17 17:32:04 sb-prereg systemd-journald[424]: System journal (/var/log/journal/9d48dc14ff47463fbdf39a1806edb756) is 8.0M, max 3.6G, 3.6G free.
 -- TEST: this is with a 5GB rw partition.  so we can check later on a real system

update the entire readme
- specifically the unlock registration part
- the iso file name and version break down (if its changed)
- the network section (restore and static IP)
- and how the required_deb package list is updated

IN PROGRESS: add the waggle user support
- ability fo the `waggle` user to login and get access to waggle home space
- TEST: need write access to /home/waggle
- TEST: docker and kubectl access (done)

IN PROGRESS: install pywaggle
- pip3 install pywagglemsg==0.3.0.post1

figure out boot partition prompt during VM and fix it

use VM during .github actions to test the VM comes up?
- at a min specify instructions
- create vagrant for VM?

------------------------------------
DONE
------------------------------------
Ensure the root user password is the same as on the NX
 - actually lets leave this different for security reasons (unchanged)

 disable the apt auto upgrade service timers
- apt-daily-upgrade
- apt-daily
- motd

figure out how k3s is installed and if we can do it better then having the k3s_install pre-downloaded
- download it in the docker / ISO setup and have it copied to the ISO and then put on systems 
-- need to test this works

remove items from firstboot script
- do the overlay as part of the ROOTFS
- others?

configure the overlayroot to be setup on first boot already
- and/or update the firstboot.sh script

make sure rsyslog is disabled or not installed

Install the waggle k3s shutdown service
- ensure the log is gone on shutdown : Failed unmounting /media/plugin-data
-- the above log was not gone but the k3s is shutdown and the system reboots/shutsdown fast

clear the machine-id
- flash 1: d0a07a21b7c049d9916a1869da31d7c7 (/var/lib/dbus/machine-id), need to see if this is changing or not
 - real dell had: 9f6800fe80f2453fa72c29de1ede1d38
- flash 2: 2fe0e... so its different: good: done
-- may not need this as we are flashing from an ISO that should probably generate a new machine-id per machine

we DONT want to enable k3s right away, as it will create the node `sb-prereg`
 - we need to wait until after hostname has completed.  so I think we can gate this some service items
   in the k3s override to be sure k3s doesnt start until we are ready for it to start
   -- we test to be sure the hostname doesnt equal 'prereg' and then it wont start until thats correct
- we DONT need to do anything, as it will use the node-id and the system name from config. it all works: done

dnsmasq and other services override to ensure proper order

NetworkManager lan0 configuration to the 2nd ethernet port (not the uplink one)
- try to switch the lan0 configuration to be within NetworkManager system-connections just like WSN
- why do we have a setting in /etc/network for static IPs ?
- IT IS BY DESIGN (see readme) THAT NETWORK IS DISABLED BY DEFAULT, we should still have the network system-connections in ROOTFS for when eventually
  the network is unlocked
- investigate how to do static IPs with the system-connections (in replacement of the stuff outlined in README)

local docker registries for pulling images for downstream agents (i.e. rpi)
- add local docker registry service
- and the mirrors

figure out why the "set to +w" for root is not working for all files we copy in pressed
- think this works now, just need to test it

disable ipv6
- echo 'net.ipv6.conf.all.disable_ipv6 = 1' >> /etc/sysctl.conf

add steps in postinst to set the /media/rpi to mount `ro` and /media/plugin-data with some specific settings
- rpi: defaults,nofail,ro,x-systemd.after=local-fs-pre.target,x-systemd.before=local-fs.target
- plugin-data: defaults,nofail,x-systemd.after=local-fs-pre.target,x-systemd.before=local-fs.target
- TEST: the boot order of the services with respect to these mounts

validate NVidia GPU support for running containers
- do we need that k3s config change to use the NVidia runtime
- docker test: passed
- k3s test: passed

setup k3s with same K3S_CLUSTER_SECRET=4tX0DUZ0uQknRtVUAKjt as WSN just in case we ever have a agents
- k3s service changes (this would need to be a systemd override file, which means we need to be able to create "end filesystem" )
- TEST: need to test this with a RPi
 -- cluster secret is in-place, just need to do the testing

local 10.31.81.1 DNS resolver
- setting up the systemd-resolver or whatever so that all agents use this DNS resolver
- TEST: i think this works and is done

add the rpi (agent) ssh key (encrypted) and ensure we can ssh to rpi

add waggle-firewall service
- ensure runs before dnsmasq, k3s, docker, others as in WSN
 -- TEST: need to test above (service start order)
 -- TEST: need to test that firewall is working as we want

ensure sshd_config doesnt allow password login
- TEST: actually ensure firewall blocks it completely
- other nx sshd settings

PASS on this: setup the apt sources to match that of the WSN
- evaluate if we need to override the apt sources.list file

PASS on this: configure bash prompt for full color
 - sed -i 's|^#force_color_prompt=\(.*\)|force_color_prompt=yes|' root/.bashrc

PASS on this: add wifi support for the default wifi card and default wifi (waggle) profile for auto-connect
- i don't know if we need to add driver support, etc.
- disable power savings modprobe ?
- TEST: connect wifi to a Dell blade and see what happens
