on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Blade Release
        id: build_project
        run: |
          ./build.sh
          echo "##[set-output name=blade-image;]$(ls *.iso)"

      # Split the assets into 2GB max size (GitHub limit) and upload to new release
      - name: Create Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x

          iso=${{ steps.build_project.outputs.blade-image }}
          md5sum ${iso} > checksums.md5

          # split the asset into max size 2GiB
          split --bytes=2GB ${iso} --suffix-length=1 --numeric-suffixes "${iso}-" --verbose

          # create the array of assets to upload into the release
          assets=()
          for asset in ${iso}-*; do
            assets+=("$asset")
          done

          # create the release message
          tag_name="${GITHUB_REF##*/}"
          export commit_msg="$(git log --format=%B -n 1 $tag_name)"
          export blade_files=$(printf "%s\n" "${assets[@]}")
          envsubst '${commit_msg} ${blade_files}' <release_notes.md > rel_notes

          # create the release and upload assets
          gh release create "${tag_name}" --title="Release $tag_name" --notes-file=rel_notes
          for asset in "${assets[@]}"; do
            gh release upload "${tag_name}" "${asset}"
          done

          gh release upload "${tag_name}" "checksums.md5"

          echo "Release [${tag_name}] creation complete"
